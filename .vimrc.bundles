" Environment {

    " Basics {
        set nocompatible        " Must be first line
        set background=dark     " Assume a dark background
    " }

    " Windows Compatible {
        " On Windows, also use '.vim' instead of 'vimfiles'; this makes synchronization
        " across (heterogeneous) systems easier.
        if has('win32') || has('win64')
          set runtimepath=$HOME/.vim,$VIM/vimfiles,$VIMRUNTIME,$VIM/vimfiles/after,$HOME/.vim/after

          " Be nice and check for multi_byte even if the config requires
          " multi_byte support most of the time
          if has("multi_byte")
            " Windows cmd.exe still uses cp850. If Windows ever moved to
            " Powershell as the primary terminal, this would be utf-8
            set termencoding=cp850
            " Let Vim use utf-8 internally, because many scripts require this
            set encoding=utf-8
            setglobal fileencoding=utf-8
            " Windows has traditionally used cp1252, so it's probably wise to
            " fallback into cp1252 instead of eg. iso-8859-15.
            " Newer Windows files might contain utf-8 or utf-16 LE so we might
            " want to try them first.
            set fileencodings=ucs-bom,utf-8,utf-16le,cp1252,iso-8859-15
          endif
        endif
    " }

    " Setup Bundle Support {
        " The next three lines ensure that the ~/.vim/bundle/ system works
        filetype off
        set rtp+=~/.vim/bundle/vundle
        call vundle#rc()
    " }

    " Add an UnBundle command {
    function! UnBundle(arg, ...)
      let bundle = vundle#config#init_bundle(a:arg, a:000)
      call filter(g:vundle#bundles, 'v:val["name_spec"] != "' . a:arg . '"')
    endfunction

    com! -nargs=+         UnBundle
    \ call UnBundle(<args>)
    " }

" }

" Bundles {

    " Deps {
        Bundle 'gmarik/vundle'
        Bundle 'MarcWeber/vim-addon-mw-utils'
        Bundle 'tomtom/tlib_vim'
        if executable('ag')
            Bundle 'mileszs/ack.vim'
            let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
        elseif executable('ack-grep')
            let g:ackprg="ack-grep -H --nocolor --nogroup --column"
            Bundle 'mileszs/ack.vim'
        elseif executable('ack')
            Bundle 'mileszs/ack.vim'
        endif
    " }

    " General {
        Bundle 'scrooloose/nerdtree'
        Bundle 'tpope/vim-surround'
        Bundle 'tpope/vim-repeat'
        Bundle 'jiangmiao/auto-pairs'
        Bundle 'ctrlpvim/ctrlp.vim'
        Bundle 'tacahiroy/ctrlp-funky'
        Bundle 'matchit.zip'
        Bundle 'easymotion/vim-easymotion'
        Bundle 'jistr/vim-nerdtree-tabs'
        Bundle 'flazz/vim-colorschemes'
        Bundle 'vim-scripts/restore_view.vim'
        Bundle 'mhinz/vim-signify'
        Bundle 'reedes/vim-textobj-quote'
        Bundle 'kana/vim-textobj-user'
        Bundle 'tpope/vim-markdown'
        Bundle 'xuyuanp/nerdtree-git-plugin'
        Bundle 'airblade/vim-gitgutter'
        Bundle 'dkprice/vim-easygrep'
    " }

    " General Programming {
        Bundle 'scrooloose/nerdcommenter'
        Bundle 'luochen1990/rainbow'
        Bundle 'vim-syntastic/syntastic'
        Plugin 'nathanaelkane/vim-indent-guides'
        Plugin 'terryma/vim-multiple-cursors'
        Plugin 'tpope/vim-fugitive'
    " }

    " Javascript {
        Bundle 'elzr/vim-json'
        Bundle 'pangloss/vim-javascript'
        Bundle 'briancollins/vim-jst'
        Bundle 'heavenshell/vim-jsdoc'
        Plugin 'moll/vim-node'
        Plugin 'mxw/vim-jsx'
    " }

    " HTML {
        Bundle 'hail2u/vim-css3-syntax'
        Bundle 'mattn/emmet-vim'
        Bundle 'mustache/vim-mustache-handlebars'
        Plugin 'ap/vim-css-color'
        Plugin 'shmargum/vim-sass-colors'
    " }
    
    " Other dumb shit {
        Plugin 'vim-airline/vim-airline'
        Plugin 'vim-airline/vim-airline-themes'
        Plugin 'JamshedVesuna/vim-markdown-preview'
    " }
" }

" Use fork bundles config if available {
    if filereadable(expand("~/.vimrc.bundles.fork"))
        source ~/.vimrc.bundles.fork
    endif
" }

" Use local bundles config if available {
    if filereadable(expand("~/.vimrc.bundles.local"))
        source ~/.vimrc.bundles.local
    endif
" }
